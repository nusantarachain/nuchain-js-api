export default {
  Address: 'MultiAddress',
  LookupSource: 'MultiAddress',
  AccountInfo: 'AccountInfoWithDualRefCount',
  OrgId: 'AccountId',
  PropName: 'Vec<u8>',
  PropValue: 'Vec<u8>',
  Property: {
    name: 'PropName',
    value: 'PropValue',
  },
  Organization: {
    id: 'AccountId',
    name: 'Text',
    description: 'Text',
    admin: 'AccountId',
    website: 'Text',
    email: 'Text',
    suspended: 'bool',
    block: 'BlockNumber',
    timestamp: 'Moment',
    props: 'Option<Vec<Property>>',
  },
  FlagDataBits: 'u64',
  CertId: '[u8; 32]',
  IssuedId: '[u8; 11]',
  CertDetail: {
    name: 'Text',
    description: 'Text',
    org_id: 'AccountId',
    signer_name: 'Option<Text>',
  },
  CertProof: {
    cert_id: 'CertId',
    human_id: 'Text',
    recipient: 'Text',
    time: 'Moment',
    expired: 'Option<Moment>',
    revoked: 'bool',
    block: 'BlockNumber',
    signer_name: 'Option<Text>',
    props: 'Option<Vec<Property>>',
  },
  ProductId: 'Vec<u8>',
  Product: {
    id: 'ProductId',
    owner: 'AccountId',
    props: 'Option<Vec<Property>>',
    registered: 'Moment',
  },
  Identifier: 'Vec<u8>',
  Decimal: 'i32',
  TrackingId: 'Identifier',
  TrackingEventIndex: 'u128',
  DeviceId: 'Identifier',
  Year: 'u32',
  TrackingStatus: 'Vec<u8>',
  Track: {
    id: 'TrackingId',
    owner: 'AccountId',
    status: 'TrackingStatus',
    products: 'Vec<ProductId>',
    registered: 'Moment',
    updated: 'Option<Moment>',
    parent_id: 'TrackingId',
    props: 'Option<Vec<Property>>',
  },
  TrackingEventType: {
    _enum: [
      'TrackingRegistration',
      'TrackingUpdateStatus',
      'TrackingScan',
      'TrackingDeliver',
    ],
  },
  TrackingEvent: {
    event_type: 'TrackingEventType',
    shipment_id: 'TrackingId',
    location: 'Option<ReadPoint>',
    readings: 'Vec<Reading<Moment>>',
    status: 'TrackingStatus',
    timestamp: 'Moment',
    props: 'Option<Vec<Property>>',
  },
  ReadPoint: {
    latitude: 'Decimal',
    longitude: 'Decimal',
  },
  ReadingType: {
    _enum: [
      'Humidity',
      'Pressure',
      'Shock',
      'Tilt',
      'Temperature',
      'Vibration',
    ],
  },
  Reading: {
    device_id: 'DeviceId',
    reading_type: 'ReadingType',
    timestamp: 'Moment',
    value: 'Decimal',
  },
  Attribute: {
    name: 'Text',
    value: 'Text',
    validity: 'BlockNumber',
    creation: 'Moment',
    nonce: 'u64',
  },
  AttributeTransaction: {
    signature: 'Signature',
    name: 'Text',
    value: 'Text',
    validity: 'u32',
    signer: 'AccountId',
    identity: 'AccountId',
  },
  // pallet liquidity -----------
  ProofId: 'u64',
  ProofTx: {
    id: 'ProofId',
    block: 'BlockNumber',
    network: 'u32',
    amount: 'Balance',
    owner: 'AccountId',
  }
  // end of pallet liquidity ----
};
